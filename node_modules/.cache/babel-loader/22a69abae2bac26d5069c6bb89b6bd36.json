{"ast":null,"code":"var _jsxFileName = \"/Volumes/SAJAL/TAMK/5th Semester/Full Stack Web Development /FrontEnd/Programming Assignment/to-do-app/src/components/Todo.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { MdDeleteForever } from 'react-icons/md';\nimport { RiEdit2Line } from 'react-icons/ri';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [edit, setEdit] = useState(false);\n  const [newName, setNewName] = useState('');\n  const editFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n  const edited = usePrev(edit);\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!newName.trim()) {\n      return;\n    }\n\n    props.editTask(props.id, newName);\n    setNewName(\"\");\n    setEdit(false);\n  }\n\n  function usePrev(value) {\n    _s();\n\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  }\n\n  _s(usePrev, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n  useEffect(() => {\n    if (!edited && edit) {\n      editFieldRef.current.focus();\n    }\n\n    if (edited && !edit) {\n      editButtonRef.current.focus();\n    }\n  }, [edited, edit]);\n\n  const updateTask = /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"inputForm\",\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: props.id,\n        className: \"todoInput\",\n        type: \"text\",\n        value: newName || props.name,\n        onChange: handleChange,\n        ref: editFieldRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"inputButton \",\n        children: \" Update \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n\n  const todoList = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoRow\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: props.id,\n        type: \"checkbox\",\n        defaultChecked: props.completed,\n        onChange: () => props.toggleTaskCompleted(props.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"todo-task\",\n        htmlFor: props.id,\n        title: \"Click here if it is Completed.\",\n        children: [\" \", props.name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setEdit(true),\n        ref: editButtonRef,\n        className: \"editIcon edit\",\n        title: \"Click here to edit your item...\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(RiEdit2Line, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 55\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.deleteTask(props.id),\n        className: \"removeIcon\",\n        title: \"Delete item from this list\",\n        children: [\"  \", /*#__PURE__*/_jsxDEV(MdDeleteForever, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 51\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: edit ? updateTask : todoList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Todo, \"/bDLkCYTTWSKhjS/9L5fGn7UV4M=\", false, function () {\n  return [usePrev];\n});\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Volumes/SAJAL/TAMK/5th Semester/Full Stack Web Development /FrontEnd/Programming Assignment/to-do-app/src/components/Todo.js"],"names":["React","useEffect","useRef","useState","MdDeleteForever","RiEdit2Line","Todo","props","edit","setEdit","newName","setNewName","editFieldRef","editButtonRef","edited","usePrev","handleChange","e","target","value","handleSubmit","preventDefault","trim","editTask","id","ref","current","focus","updateTask","name","todoList","completed","toggleTaskCompleted","deleteTask"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { MdDeleteForever } from 'react-icons/md';\nimport { RiEdit2Line } from 'react-icons/ri';\n\nfunction Todo(props) {\n  const [edit, setEdit] = useState(false);\n  const [newName, setNewName] = useState('');\n\n  const editFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n\n  const edited = usePrev(edit);\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (!newName.trim()) {\n      return;\n    }\n    props.editTask(props.id, newName);\n    setNewName(\"\");\n    setEdit(false);\n  }\n\n  function usePrev(value) {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  }\n  \n  useEffect(() => {\n    if (!edited && edit) {\n      editFieldRef.current.focus();\n    }\n    if (edited && !edit) {\n      editButtonRef.current.focus();\n    }\n  }, [edited, edit]);\n\n  const updateTask = (\n    <form className=\"inputForm\" onSubmit={handleSubmit}>\n      <div>\n        <input\n          id={props.id}\n          className=\"todoInput\"\n          type=\"text\"\n          value={newName || props.name}\n          onChange={handleChange}\n          ref={editFieldRef}\n        />\n        <button type=\"submit\" className=\"inputButton \"> Update </button>\n      </div>\n    </form>\n  );\n\n  const todoList = (\n    <div className=\"todoRow\">\n        <div>\n          <input\n            id={props.id}\n            type=\"checkbox\"\n            defaultChecked={props.completed}\n            onChange={() => props.toggleTaskCompleted(props.id)}\n          />\n          <label className=\"todo-task\" htmlFor={props.id} title=\"Click here if it is Completed.\"> {props.name} </label>\n        </div>\n        <div className=\"icons\">\n          <button \n            type=\"button\"\n            onClick={() => setEdit(true)}\n            ref={editButtonRef} \n            className='editIcon edit' \n            title=\"Click here to edit your item...\" > <RiEdit2Line />\n          </button>\n\n          <button  \n            onClick={() => props.deleteTask(props.id)}\n            className='removeIcon' \n            title=\"Delete item from this list\" >  <MdDeleteForever />\n          </button>\n        </div>\n    </div>\n  );\n\n  return (\n    <li>{edit ? updateTask : todoList}</li>\n  );\n}\nexport default Todo;"]},"metadata":{},"sourceType":"module"}