{"ast":null,"code":"var _jsxFileName = \"/Volumes/SAJAL/GITHUB/Projects/react-to-do-app/src/components/ToDoApp.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport InputForm from \"./InputForm\";\nimport FiltersButton from \"./FiltersButton\";\nimport Todo from \"./Todo\";\nimport { nanoid } from \"nanoid\";\nimport CategoryTag from './CategoryTag';\nimport SearchTodo from \"./SearchTodo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ToDoApp(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n\n  function usePrev(value) {\n    _s();\n\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  }\n\n  _s(usePrev, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      if (id === task.id) {\n        return { ...task,\n          completed: !task.completed\n        };\n      }\n\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n      if (id === task.id) {\n        return { ...task,\n          name: newName\n        };\n      }\n\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  function addTask(name) {\n    const newTask = {\n      id: nanoid(),\n      name: name,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n  }\n\n  const MAP_FILTERING = {\n    All: () => true,\n    Active: task => !task.completed,\n    Done: task => task.completed\n  };\n  const TODO_FILTER = Object.keys(MAP_FILTERING);\n  const taskList = tasks.filter(MAP_FILTERING[filter]).map(task => /*#__PURE__*/_jsxDEV(Todo, {\n    id: task.id,\n    name: task.name,\n    completed: task.completed,\n    toggleTaskCompleted: toggleTaskCompleted,\n    deleteTask: deleteTask,\n    editTask: editTask\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this));\n  const filteredList = TODO_FILTER.map(name => /*#__PURE__*/_jsxDEV(FiltersButton, {\n    name: name,\n    isClicked: name === filter,\n    setFilter: setFilter\n  }, name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this));\n  const tasksNoun = taskList.length !== 1 ? 'To-Do tasks' : 'To-Do task';\n  const headingText = `${taskList.length} ${tasksNoun}`;\n  const listHeadingRef = useRef(null);\n  const prevTaskLength = usePrev(tasks.length);\n  useEffect(() => {\n    if (tasks.length - prevTaskLength === -1) {\n      listHeadingRef.current.focus();\n    }\n  }, [tasks.length, prevTaskLength]);\n\n  const selectedTags = tags => {\n    console.log(tags);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(InputForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchTodo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CategoryTag, {\n      selectedTags: selectedTags,\n      tags: ['Shopping', 'Cook', 'Eat']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"taskCount\",\n      tabIndex: \"-1\",\n      ref: listHeadingRef,\n      children: [\" A list of \", headingText]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), filteredList, /*#__PURE__*/_jsxDEV(\"ul\", {\n      role: \"list\",\n      \"aria-labelledby\": \"taskCount\",\n      children: [\" \", taskList, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ToDoApp, \"LrkClO78/MDC8OYZUaoQYLGYB04=\", false, function () {\n  return [usePrev];\n});\n\n_c = ToDoApp;\nexport default ToDoApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoApp\");","map":{"version":3,"sources":["/Volumes/SAJAL/GITHUB/Projects/react-to-do-app/src/components/ToDoApp.js"],"names":["React","useState","useRef","useEffect","InputForm","FiltersButton","Todo","nanoid","CategoryTag","SearchTodo","ToDoApp","props","tasks","setTasks","filter","setFilter","usePrev","value","ref","current","toggleTaskCompleted","id","updatedTasks","map","task","completed","deleteTask","remainingTasks","editTask","newName","editedTaskList","name","addTask","newTask","MAP_FILTERING","All","Active","Done","TODO_FILTER","Object","keys","taskList","filteredList","tasksNoun","length","headingText","listHeadingRef","prevTaskLength","focus","selectedTags","tags","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport InputForm from \"./InputForm\";\nimport FiltersButton from \"./FiltersButton\";\nimport Todo from \"./Todo\";\nimport { nanoid } from \"nanoid\";\nimport CategoryTag from './CategoryTag';\nimport SearchTodo from \"./SearchTodo\";\n\nfunction ToDoApp(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n\n  function usePrev(value) {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  }\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      if (id === task.id) {\n        return {...task, completed: !task.completed}\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n      if (id === task.id) {\n        return {...task, name: newName}\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n  function addTask(name) {\n    const newTask = { id: nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\n  const MAP_FILTERING = {\n    All: () => true,\n    Active: task => !task.completed,\n    Done: task => task.completed\n  };\n  const TODO_FILTER = Object.keys(MAP_FILTERING);\n\n  const taskList = tasks\n  .filter(MAP_FILTERING[filter])\n  .map(task => (\n    <Todo\n      id={task.id}\n      name={task.name}\n      completed={task.completed}\n      key={task.id}\n      toggleTaskCompleted={toggleTaskCompleted}\n      deleteTask={deleteTask}\n      editTask={editTask}\n    />\n  ));\n\n  const filteredList = TODO_FILTER.map(name => (\n    <FiltersButton\n      key={name}\n      name={name}\n      isClicked={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  const tasksNoun = taskList.length !== 1 ? 'To-Do tasks' : 'To-Do task';\n  const headingText = `${taskList.length} ${tasksNoun}`;\n\n  const listHeadingRef = useRef(null);\n  const prevTaskLength = usePrev(tasks.length);\n\n  useEffect(() => {\n    if (tasks.length - prevTaskLength === -1) {\n      listHeadingRef.current.focus();\n    }\n  }, [tasks.length, prevTaskLength]);\n\n  const selectedTags = tags => {\n    console.log(tags);\n  };\n\n  return (\n    <div>\n      <InputForm addTask={addTask} />\n\n      <SearchTodo />\n\n      <CategoryTag selectedTags={selectedTags}  tags={['Shopping', 'Cook', 'Eat']} />\n\n      <h1 id=\"taskCount\" tabIndex=\"-1\" ref={listHeadingRef}> A list of {headingText}</h1>\n        {filteredList}\n      <ul\n        role=\"list\"\n        aria-labelledby=\"taskCount\"\n      > {taskList} </ul>\n    </div>\n  );\n}\n\nexport default ToDoApp;\n"]},"metadata":{},"sourceType":"module"}